plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'by.andd3dfx'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-ollama-spring-boot-starter'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'org.springframework.ai:spring-ai-spring-boot-docker-compose'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:ollama:1.20.6'
	testImplementation 'io.rest-assured:rest-assured:5.5.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()

	// Fix build warning about `Mockito is currently self-attaching ...`
	jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'

	// show test status after each test
	testLogging {
		events "passed", "skipped", "failed",
				// "standardOut",   // Uncomment to get all logs during tests execution
				"standardError"
	}

	// show test report
	afterSuite { desc, result ->
		if (!desc.parent)
			println("${result.resultType} " +
					"(${result.testCount} tests, " +
					"${result.successfulTestCount} successes, " +
					"${result.failedTestCount} failures, " +
					"${result.skippedTestCount} skipped)")
	}
}
